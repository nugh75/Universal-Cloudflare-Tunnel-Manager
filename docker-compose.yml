# docker-compose.yml

services:
  tunnel-manager:
    build:
      context: . # Usa il Dockerfile nella directory corrente (.)
      dockerfile: Dockerfile
    container_name: cloudflare_tunnel_manager_app # Nome personalizzato per il container
    ports:
      - "5001:5001" # Mappa la porta 5001 dell'host alla porta 5001 del container
    volumes:
      # Monta il socket Docker dell'host nel container.
      # Permette all'applicazione di eseguire comandi `docker ps`, ecc.
      # ATTENZIONE: Questo dà al container privilegi elevati sull'host Docker.
      - /var/run/docker.sock:/var/run/docker.sock

      # Volume nominato per rendere persistente la directory /app/data del container.
      - tunnel_manager_app_data:/app/data
    environment:
      # Imposta l'IP locale a cui cloudflared deve puntare per i servizi Docker sull'host.
      - LOCAL_IP=host.docker.internal
    restart: unless-stopped # Riavvia il container a meno che non sia stato fermato manualmente

    # Per Linux, host.docker.internal potrebbe richiedere questa configurazione
    # per essere disponibile. Per Docker Desktop (Windows/Mac) è solitamente automatico.
    extra_hosts:
      - "host.docker.internal:host-gateway"

volumes:
  tunnel_manager_app_data: # Definisce il volume nominato per la persistenza dei dati
    name: tunnel_manager_app_data_volume # Nome esplicito per il volume